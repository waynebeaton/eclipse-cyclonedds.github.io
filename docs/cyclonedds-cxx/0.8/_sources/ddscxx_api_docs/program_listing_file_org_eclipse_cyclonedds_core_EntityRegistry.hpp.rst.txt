
.. _program_listing_file_org_eclipse_cyclonedds_core_EntityRegistry.hpp:

Program Listing for File EntityRegistry.hpp
===========================================

|exhale_lsh| :ref:`Return to documentation for file <file_org_eclipse_cyclonedds_core_EntityRegistry.hpp>` (``org/eclipse/cyclonedds/core/EntityRegistry.hpp``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   /*
    * Copyright(c) 2006 to 2020 ADLINK Technology Limited and others
    *
    * This program and the accompanying materials are made available under the
    * terms of the Eclipse Public License v. 2.0 which is available at
    * http://www.eclipse.org/legal/epl-2.0, or the Eclipse Distribution License
    * v. 1.0 which is available at
    * http://www.eclipse.org/org/documents/edl-v10.php.
    *
    * SPDX-License-Identifier: EPL-2.0 OR BSD-3-Clause
    */
   
   
   #ifndef CYCLONEDDS_CORE_ENTITY_REGISTRY_HPP_
   #define CYCLONEDDS_CORE_ENTITY_REGISTRY_HPP_
   
   #include <dds/core/detail/WeakReferenceImpl.hpp>
   #include <org/eclipse/cyclonedds/core/Mutex.hpp>
   
   #include <map>
   
   namespace org
   {
   namespace eclipse
   {
   namespace cyclonedds
   {
   namespace core
   {
   
   template <typename T, typename U>
   class EntityRegistry
   {
   public:
       void insert(T key, U& val)
       {
           mutex.lock();
           registry[key] = dds::core::WeakReference<U>(val);
           mutex.unlock();
       }
   
       void remove(T key)
       {
           mutex.lock();
           registry.erase(key);
           mutex.unlock();
       }
   
       U get(T key)
       {
           typename std::map<T, dds::core::WeakReference<U> >::iterator it;
   
           mutex.lock();
           it = registry.find(key);
   
           U entity(dds::core::null);
           if(it != registry.end())
           {
               entity = it->second.lock();
           }
           mutex.unlock();
   
           return entity;
       }
   
   private:
       std::map<T, dds::core::WeakReference<U> > registry;
       org::eclipse::cyclonedds::core::Mutex mutex;
   };
   
   }
   }
   }
   }
   
   #endif /* CYCLONEDDS_CORE_ENTITY_REGISTRY_HPP_ */
