
.. _program_listing_file_org_eclipse_cyclonedds_core_cond_FunctorHolder.hpp:

Program Listing for File FunctorHolder.hpp
==========================================

|exhale_lsh| :ref:`Return to documentation for file <file_org_eclipse_cyclonedds_core_cond_FunctorHolder.hpp>` (``org/eclipse/cyclonedds/core/cond/FunctorHolder.hpp``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   /*
    * Copyright(c) 2006 to 2020 ADLINK Technology Limited and others
    *
    * This program and the accompanying materials are made available under the
    * terms of the Eclipse Public License v. 2.0 which is available at
    * http://www.eclipse.org/legal/epl-2.0, or the Eclipse Distribution License
    * v. 1.0 which is available at
    * http://www.eclipse.org/org/documents/edl-v10.php.
    *
    * SPDX-License-Identifier: EPL-2.0 OR BSD-3-Clause
    */
   
   
   #ifndef CYCLONEDDS_CORE_COND_FUNCTOR_HOLDER_HPP_
   #define CYCLONEDDS_CORE_COND_FUNCTOR_HOLDER_HPP_
   
   namespace dds
   {
   namespace core
   {
   namespace cond
   {
    class Condition;
   }
   }
   }
   
   namespace org
   {
   namespace eclipse
   {
   namespace cyclonedds
   {
   namespace core
   {
   namespace cond
   {
   
   class ConditionDelegate;
   
   class FunctorHolderBase
   {
   public:
       FunctorHolderBase() { };
   
       virtual ~FunctorHolderBase() { };
   
       virtual void dispatch(dds::core::cond::Condition<org::eclipse::cyclonedds::core::cond::ConditionDelegate> &condition) = 0;
   };
   
   template <typename FUN>
   class FunctorHolder : public FunctorHolderBase
   {
   public:
       FunctorHolder(FUN functor) : myFunctor(functor)
       {
       }
   
       virtual ~FunctorHolder() { };
   
       void dispatch(dds::core::cond::Condition<org::eclipse::cyclonedds::core::cond::ConditionDelegate> &condition)
       {
           myFunctor(condition);
       }
   
   private:
       FUN myFunctor;
   };
   
   }
   }
   }
   }
   }
   
   #endif  /* CYCLONEDDS_CORE_COND_FUNCTOR_HOLDER_HPP_ */
