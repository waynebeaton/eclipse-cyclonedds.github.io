
.. _program_listing_file_org_eclipse_cyclonedds_core_cond_StatusConditionDelegate.hpp:

Program Listing for File StatusConditionDelegate.hpp
====================================================

|exhale_lsh| :ref:`Return to documentation for file <file_org_eclipse_cyclonedds_core_cond_StatusConditionDelegate.hpp>` (``org/eclipse/cyclonedds/core/cond/StatusConditionDelegate.hpp``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   /*
    * Copyright(c) 2006 to 2020 ADLINK Technology Limited and others
    *
    * This program and the accompanying materials are made available under the
    * terms of the Eclipse Public License v. 2.0 which is available at
    * http://www.eclipse.org/legal/epl-2.0, or the Eclipse Distribution License
    * v. 1.0 which is available at
    * http://www.eclipse.org/org/documents/edl-v10.php.
    *
    * SPDX-License-Identifier: EPL-2.0 OR BSD-3-Clause
    */
   
   
   #ifndef CYCLONEDDS_CORE_STATUS_CONDITION_DELEGATE_HPP_
   #define CYCLONEDDS_CORE_STATUS_CONDITION_DELEGATE_HPP_
   
   #include <dds/core/Entity.hpp>
   #include <dds/core/status/Status.hpp>
   #include <org/eclipse/cyclonedds/core/cond/ConditionDelegate.hpp>
   
   namespace dds
   {
   namespace core
   {
   namespace cond
   {
   template <typename T> class StatusCondition;
   }
   }
   }
   
   namespace org
   {
   namespace eclipse
   {
   namespace cyclonedds
   {
   namespace core
   {
   namespace cond
   {
   
   class OMG_DDS_API StatusConditionDelegate :
                            public org::eclipse::cyclonedds::core::cond::ConditionDelegate
   {
   public:
       typedef ::dds::core::smart_ptr_traits<StatusConditionDelegate>::ref_type
                                                                         ref_type;
       typedef
          ::dds::core::smart_ptr_traits<StatusConditionDelegate>::weak_ref_type
                                                                    weak_ref_type;
   
       StatusConditionDelegate(
               const org::eclipse::cyclonedds::core::EntityDelegate *entity,
               dds_entity_t uEntity);
   
       ~StatusConditionDelegate();
   
       virtual void close();
   
       void init(org::eclipse::cyclonedds::core::ObjectDelegate::weak_ref_type weak_ref);
   
       void enabled_statuses(const dds::core::status::StatusMask& status);
   
       dds::core::status::StatusMask enabled_statuses() const;
   
       dds::core::Entity& entity();
   
       virtual bool trigger_value() const;
   
       dds::core::cond::StatusCondition<StatusConditionDelegate> wrapper();
   
   private:
       dds::core::Entity myEntity;
   };
   
   }
   }
   }
   }
   }
   
   #endif  /* CYCLONEDDS_CORE_STATUS_CONDITION_DELEGATE_HPP_ */
