
.. _program_listing_file_org_eclipse_cyclonedds_topic_BuiltinTopic.hpp:

Program Listing for File BuiltinTopic.hpp
=========================================

|exhale_lsh| :ref:`Return to documentation for file <file_org_eclipse_cyclonedds_topic_BuiltinTopic.hpp>` (``org/eclipse/cyclonedds/topic/BuiltinTopic.hpp``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   /*
    * Copyright(c) 2006 to 2020 ADLINK Technology Limited and others
    *
    * This program and the accompanying materials are made available under the
    * terms of the Eclipse Public License v. 2.0 which is available at
    * http://www.eclipse.org/legal/epl-2.0, or the Eclipse Distribution License
    * v. 1.0 which is available at
    * http://www.eclipse.org/org/documents/edl-v10.php.
    *
    * SPDX-License-Identifier: EPL-2.0 OR BSD-3-Clause
    */
   
   #ifndef CYCLONEDDS_TOPIC_TBUILTIN_TOPIC_HPP_
   #define CYCLONEDDS_TOPIC_TBUILTIN_TOPIC_HPP_
   
   
   #include <dds/core/detail/conformance.hpp>
   #include <dds/core/Value.hpp>
   #include <dds/core/policy/CorePolicy.hpp>
   #include <dds/topic/BuiltinTopicKey.hpp>
   
   namespace org
   {
   namespace eclipse
   {
   namespace cyclonedds
   {
   namespace topic
   {
   
   class CMParticipantBuiltinTopicData;
   
   
   class CMPublisherBuiltinTopicData;
   
   
   class CMSubscriberBuiltinTopicData;
   
   
   class CMDataWriterBuiltinTopicData;
   
   
   class CMDataReaderBuiltinTopicData;
   }
   }
   }
   }
   
   class org::eclipse::cyclonedds::topic::CMParticipantBuiltinTopicData  : public ::dds::core::Value
   {
   public:
       const dds::topic::BuiltinTopicKey&        key() const
       {
           return this->delegate().key();
       }
   };
   
   class org::eclipse::cyclonedds::topic::CMPublisherBuiltinTopicData  : public ::dds::core::Value
   {
   public:
       const dds::topic::BuiltinTopicKey&        key() const
       {
           return this->delegate().key();
       }
       const dds::topic::BuiltinTopicKey&        participant_key() const
       {
           return this->delegate().participant_key();
       }
       const std::string&                        name() const
       {
           return this->delegate().name();
       }
       const ::dds::core::policy::EntityFactory& entity_factory() const
       {
           return this->delegate().entity_factory();
       }
       const ::dds::core::policy::Partition&     partition() const
       {
           return this->delegate().partition();
       }
   };
   
   class org::eclipse::cyclonedds::topic::CMSubscriberBuiltinTopicData  : public ::dds::core::Value
   {
   public:
       const dds::topic::BuiltinTopicKey&        key() const
       {
           return this->delegate().key();
       }
       const dds::topic::BuiltinTopicKey&        participant_key() const
       {
           return this->delegate().participant_key();
       }
       const std::string&                        name() const
       {
           return this->delegate().name();
       }
       const ::dds::core::policy::EntityFactory& entity_factory() const
       {
           return this->delegate().entity_factory();
       }
       const ::dds::core::policy::Partition&     partition() const
       {
           return this->delegate().partition();
       }
   };
   
   class org::eclipse::cyclonedds::topic::CMDataWriterBuiltinTopicData  : public ::dds::core::Value
   {
   public:
       const dds::topic::BuiltinTopicKey&              key() const
       {
           return this->delegate().key();
       }
       const dds::topic::BuiltinTopicKey&              publisher_key() const
       {
           return this->delegate().publisher_key();
       }
       const std::string&                              name() const
       {
           return this->delegate().name();
       }
       const ::dds::core::policy::History&             history() const
       {
           return this->delegate().history();
       }
       const ::dds::core::policy::ResourceLimits&      resource_limits() const
       {
           return this->delegate().resource_limits();
       }
       const ::dds::core::policy::WriterDataLifecycle& writer_data_lifecycle() const
       {
           return this->delegate().writer_data_lifecycle();
       }
   };
   
   class org::eclipse::cyclonedds::topic::CMDataReaderBuiltinTopicData  : public ::dds::core::Value
   {
   public:
       const dds::topic::BuiltinTopicKey&              key() const
       {
           return this->delegate().key();
       }
       const dds::topic::BuiltinTopicKey&              subscriber_key() const
       {
           return this->delegate().subscriber_key();
       }
       const std::string&                              name() const
       {
           return this->delegate().name();
       }
       const ::dds::core::policy::History&             history() const
       {
           return this->delegate().history();
       }
       const ::dds::core::policy::ResourceLimits&      resource_limits() const
       {
           return this->delegate().resource_limits();
       }
       const ::dds::core::policy::ReaderDataLifecycle& reader_data_lifecycle() const
       {
           return this->delegate().reader_data_lifecycle();
       }
   };
   
   #endif /* CYCLONEDDS_TOPIC_TBUILTIN_TOPIC_HPP_ */
